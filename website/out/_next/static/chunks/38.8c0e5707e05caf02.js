"use strict";(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[38],{4038:function(t,e,s){var i;function o(t){return t.isPerspectiveCamera}function r(t){return t.isOrthographicCamera}s.d(e,{Z:function(){return Y}}),function(t){t[t.NONE=0]="NONE",t[t.ROTATE=1]="ROTATE",t[t.TRUCK=2]="TRUCK",t[t.OFFSET=3]="OFFSET",t[t.DOLLY=4]="DOLLY",t[t.ZOOM=5]="ZOOM",t[t.TOUCH_ROTATE=6]="TOUCH_ROTATE",t[t.TOUCH_TRUCK=7]="TOUCH_TRUCK",t[t.TOUCH_OFFSET=8]="TOUCH_OFFSET",t[t.TOUCH_DOLLY=9]="TOUCH_DOLLY",t[t.TOUCH_ZOOM=10]="TOUCH_ZOOM",t[t.TOUCH_DOLLY_TRUCK=11]="TOUCH_DOLLY_TRUCK",t[t.TOUCH_DOLLY_OFFSET=12]="TOUCH_DOLLY_OFFSET",t[t.TOUCH_ZOOM_TRUCK=13]="TOUCH_ZOOM_TRUCK",t[t.TOUCH_ZOOM_OFFSET=14]="TOUCH_ZOOM_OFFSET"}(i||(i={}));const n=2*Math.PI,a=Math.PI/2;function h(t,e=1e-5){return Math.abs(t)<e}function c(t,e,s=1e-5){return h(t-e,s)}function l(t,e){return Math.round(t/e)*e}function _(t){return isFinite(t)?t:t<0?-Number.MAX_VALUE:Number.MAX_VALUE}function d(t){return Math.abs(t)<Number.MAX_VALUE?t:t*(1/0)}function m(t,e){e.set(0,0),t.forEach((t=>{e.x+=t.clientX,e.y+=t.clientY})),e.x/=t.length,e.y/=t.length}function p(t,e){return!!r(t)&&(console.warn(`${e} is not supported in OrthographicCamera`),!0)}function u(t){return t.invert?t.invert():t.inverse(),t}const f="undefined"!==typeof window,E=f&&/Mac/.test(navigator.platform),y=!(f&&"PointerEvent"in window),g=Object.freeze(i),O=1/8;let T,v,x,C,w,A,U,z,L,S,D,F,b,P,R,M,k,V,B,I;class Y extends class{constructor(){this._listeners={}}addEventListener(t,e){const s=this._listeners;void 0===s[t]&&(s[t]=[]),-1===s[t].indexOf(e)&&s[t].push(e)}removeEventListener(t,e){const s=this._listeners[t];if(void 0!==s){const t=s.indexOf(e);-1!==t&&s.splice(t,1)}}removeAllEventListeners(t){t?Array.isArray(this._listeners[t])&&(this._listeners[t].length=0):this._listeners={}}dispatchEvent(t){const e=this._listeners[t.type];if(void 0!==e){t.target=this;const s=e.slice(0);for(let e=0,i=s.length;e<i;e++)s[e].call(this,t)}}}{constructor(t,e){if(super(),this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.minDistance=0,this.maxDistance=1/0,this.infinityDolly=!1,this.minZoom=.01,this.maxZoom=1/0,this.dampingFactor=.05,this.draggingDampingFactor=.25,this.azimuthRotateSpeed=1,this.polarRotateSpeed=1,this.dollySpeed=1,this.truckSpeed=2,this.dollyToCursor=!1,this.dragToOffset=!1,this.verticalDragToForward=!1,this.boundaryFriction=0,this.restThreshold=.01,this.colliderMeshes=[],this.cancel=()=>{},this._enabled=!0,this._state=i.NONE,this._viewport=null,this._dollyControlAmount=0,this._hasRested=!0,this._boundaryEnclosesCamera=!1,this._needsUpdate=!0,this._updatedLastTime=!1,this._elementRect=new DOMRect,this._activePointers=[],this._truckInternal=(t,e,s)=>{if(o(this._camera)){const i=A.copy(this._camera.position).sub(this._target),o=this._camera.getEffectiveFOV()*T.MathUtils.DEG2RAD,r=i.length()*Math.tan(.5*o),n=this.truckSpeed*t*r/this._elementRect.height,a=this.truckSpeed*e*r/this._elementRect.height;this.verticalDragToForward?(s?this.setFocalOffset(this._focalOffsetEnd.x+n,this._focalOffsetEnd.y,this._focalOffsetEnd.z,!0):this.truck(n,0,!0),this.forward(-a,!0)):s?this.setFocalOffset(this._focalOffsetEnd.x+n,this._focalOffsetEnd.y+a,this._focalOffsetEnd.z,!0):this.truck(n,a,!0)}else if(r(this._camera)){const i=this._camera,o=t*(i.right-i.left)/i.zoom/this._elementRect.width,r=e*(i.top-i.bottom)/i.zoom/this._elementRect.height;s?this.setFocalOffset(this._focalOffsetEnd.x+o,this._focalOffsetEnd.y+r,this._focalOffsetEnd.z,!0):this.truck(o,r,!0)}},this._rotateInternal=(t,e)=>{const s=n*this.azimuthRotateSpeed*t/this._elementRect.height,i=n*this.polarRotateSpeed*e/this._elementRect.height;this.rotate(s,i,!0)},this._dollyInternal=(t,e,s)=>{const i=Math.pow(.95,-t*this.dollySpeed),o=this._sphericalEnd.radius*i,r=this._sphericalEnd.radius,n=r*(t>=0?-1:1);this.dollyTo(o),this.infinityDolly&&(o<this.minDistance||this.maxDistance===this.minDistance)&&(this._camera.getWorldDirection(A),this._targetEnd.add(A.normalize().multiplyScalar(n)),this._target.add(A.normalize().multiplyScalar(n))),this.dollyToCursor&&(this._dollyControlAmount+=this._sphericalEnd.radius-r,this.infinityDolly&&(o<this.minDistance||this.maxDistance===this.minDistance)&&(this._dollyControlAmount-=n),this._dollyControlCoord.set(e,s))},this._zoomInternal=(t,e,s)=>{const i=Math.pow(.95,t*this.dollySpeed);this.zoomTo(this._zoom*i),this.dollyToCursor&&(this._dollyControlAmount=this._zoomEnd,this._dollyControlCoord.set(e,s))},"undefined"===typeof T&&console.error("camera-controls: `THREE` is undefined. You must first run `CameraControls.install( { THREE: THREE } )`. Check the docs for further information."),this._camera=t,this._yAxisUpSpace=(new T.Quaternion).setFromUnitVectors(this._camera.up,x),this._yAxisUpSpaceInverse=u(this._yAxisUpSpace.clone()),this._state=i.NONE,this._domElement=e,this._domElement.style.touchAction="none",this._domElement.style.userSelect="none",this._domElement.style.webkitUserSelect="none",this._target=new T.Vector3,this._targetEnd=this._target.clone(),this._focalOffset=new T.Vector3,this._focalOffsetEnd=this._focalOffset.clone(),this._spherical=(new T.Spherical).setFromVector3(A.copy(this._camera.position).applyQuaternion(this._yAxisUpSpace)),this._sphericalEnd=this._spherical.clone(),this._zoom=this._camera.zoom,this._zoomEnd=this._zoom,this._nearPlaneCorners=[new T.Vector3,new T.Vector3,new T.Vector3,new T.Vector3],this._updateNearPlaneCorners(),this._boundary=new T.Box3(new T.Vector3(-1/0,-1/0,-1/0),new T.Vector3(1/0,1/0,1/0)),this._target0=this._target.clone(),this._position0=this._camera.position.clone(),this._zoom0=this._zoom,this._focalOffset0=this._focalOffset.clone(),this._dollyControlAmount=0,this._dollyControlCoord=new T.Vector2,this.mouseButtons={left:i.ROTATE,middle:i.DOLLY,right:i.TRUCK,wheel:o(this._camera)?i.DOLLY:r(this._camera)?i.ZOOM:i.NONE,shiftLeft:i.NONE},this.touches={one:i.TOUCH_ROTATE,two:o(this._camera)?i.TOUCH_DOLLY_TRUCK:r(this._camera)?i.TOUCH_ZOOM_TRUCK:i.NONE,three:i.TOUCH_TRUCK},this._domElement){const t=new T.Vector2,e=new T.Vector2,s=new T.Vector2,o=t=>{if(!this._enabled)return;const e={pointerId:t.pointerId,clientX:t.clientX,clientY:t.clientY};switch(this._activePointers.push(e),t.button){case T.MOUSE.LEFT:this._state=t.shiftKey?this.mouseButtons.shiftLeft:this.mouseButtons.left;break;case T.MOUSE.MIDDLE:this._state=this.mouseButtons.middle;break;case T.MOUSE.RIGHT:this._state=this.mouseButtons.right}if("touch"===t.pointerType)switch(this._activePointers.length){case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three}this._domElement.ownerDocument.removeEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",l),this._domElement.ownerDocument.addEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.addEventListener("pointerup",l),g()},r=t=>{if(!this._enabled)return;const e={pointerId:0,clientX:t.clientX,clientY:t.clientY};switch(this._activePointers.push(e),t.button){case T.MOUSE.LEFT:this._state=t.shiftKey?this.mouseButtons.shiftLeft:this.mouseButtons.left;break;case T.MOUSE.MIDDLE:this._state=this.mouseButtons.middle;break;case T.MOUSE.RIGHT:this._state=this.mouseButtons.right}this._domElement.ownerDocument.removeEventListener("mousemove",h),this._domElement.ownerDocument.removeEventListener("mouseup",_),this._domElement.ownerDocument.addEventListener("mousemove",h),this._domElement.ownerDocument.addEventListener("mouseup",_),g()},n=t=>{if(this._enabled){switch(t.preventDefault(),Array.prototype.forEach.call(t.changedTouches,(t=>{const e={pointerId:t.identifier,clientX:t.clientX,clientY:t.clientY};this._activePointers.push(e)})),this._activePointers.length){case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three}this._domElement.ownerDocument.removeEventListener("touchmove",c,{passive:!1}),this._domElement.ownerDocument.removeEventListener("touchend",d),this._domElement.ownerDocument.addEventListener("touchmove",c,{passive:!1}),this._domElement.ownerDocument.addEventListener("touchend",d),g()}},a=t=>{t.cancelable&&t.preventDefault();const e=t.pointerId,s=this._findPointerById(e);s&&(s.clientX=t.clientX,s.clientY=t.clientY,v())},h=t=>{const e=this._findPointerById(0);e&&(e.clientX=t.clientX,e.clientY=t.clientY,v())},c=t=>{t.cancelable&&t.preventDefault(),Array.prototype.forEach.call(t.changedTouches,(t=>{const e=t.identifier,s=this._findPointerById(e);s&&(s.clientX=t.clientX,s.clientY=t.clientY)})),v()},l=t=>{const e=t.pointerId,s=this._findPointerById(e);if(s&&this._activePointers.splice(this._activePointers.indexOf(s),1),"touch"===t.pointerType)switch(this._activePointers.length){case 0:this._state=i.NONE;break;case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three}else this._state=i.NONE;x()},_=()=>{const t=this._findPointerById(0);t&&this._activePointers.splice(this._activePointers.indexOf(t),1),this._state=i.NONE,x()},d=t=>{switch(Array.prototype.forEach.call(t.changedTouches,(t=>{const e=t.identifier,s=this._findPointerById(e);s&&this._activePointers.splice(this._activePointers.indexOf(s),1)})),this._activePointers.length){case 0:this._state=i.NONE;break;case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three}x()};let p=-1;const u=t=>{if(!this._enabled||this.mouseButtons.wheel===i.NONE)return;if(t.preventDefault(),this.dollyToCursor||this.mouseButtons.wheel===i.ROTATE||this.mouseButtons.wheel===i.TRUCK){const t=performance.now();p-t<1e3&&this._getClientRect(this._elementRect),p=t}const e=E?-1:-3,s=1===t.deltaMode?t.deltaY/e:t.deltaY/(10*e),o=this.dollyToCursor?(t.clientX-this._elementRect.x)/this._elementRect.width*2-1:0,r=this.dollyToCursor?(t.clientY-this._elementRect.y)/this._elementRect.height*-2+1:0;switch(this.mouseButtons.wheel){case i.ROTATE:this._rotateInternal(t.deltaX,t.deltaY);break;case i.TRUCK:this._truckInternal(t.deltaX,t.deltaY,!1);break;case i.OFFSET:this._truckInternal(t.deltaX,t.deltaY,!0);break;case i.DOLLY:this._dollyInternal(-s,o,r);break;case i.ZOOM:this._zoomInternal(-s,o,r)}this.dispatchEvent({type:"control"})},f=t=>{this._enabled&&t.preventDefault()},g=()=>{if(!this._enabled)return;m(this._activePointers,w),this._getClientRect(this._elementRect),t.copy(w),e.copy(w);if(this._activePointers.length>=2){const t=w.x-this._activePointers[1].clientX,i=w.y-this._activePointers[1].clientY,o=Math.sqrt(t*t+i*i);s.set(0,o);const r=.5*(this._activePointers[0].clientX+this._activePointers[1].clientX),n=.5*(this._activePointers[0].clientY+this._activePointers[1].clientY);e.set(r,n)}this.dispatchEvent({type:"controlstart"})},v=()=>{if(!this._enabled)return;m(this._activePointers,w);const o=e.x-w.x,r=e.y-w.y;switch(e.copy(w),this._state){case i.ROTATE:case i.TOUCH_ROTATE:this._rotateInternal(o,r);break;case i.DOLLY:case i.ZOOM:{const e=this.dollyToCursor?(t.x-this._elementRect.x)/this._elementRect.width*2-1:0,s=this.dollyToCursor?(t.y-this._elementRect.y)/this._elementRect.height*-2+1:0;this._state===i.DOLLY?this._dollyInternal(r*O,e,s):this._zoomInternal(r*O,e,s);break}case i.TOUCH_DOLLY:case i.TOUCH_ZOOM:case i.TOUCH_DOLLY_TRUCK:case i.TOUCH_ZOOM_TRUCK:case i.TOUCH_DOLLY_OFFSET:case i.TOUCH_ZOOM_OFFSET:{const t=w.x-this._activePointers[1].clientX,n=w.y-this._activePointers[1].clientY,a=Math.sqrt(t*t+n*n),h=s.y-a;s.set(0,a);const c=this.dollyToCursor?(e.x-this._elementRect.x)/this._elementRect.width*2-1:0,l=this.dollyToCursor?(e.y-this._elementRect.y)/this._elementRect.height*-2+1:0;this._state===i.TOUCH_DOLLY||this._state===i.TOUCH_DOLLY_TRUCK||this._state===i.TOUCH_DOLLY_OFFSET?this._dollyInternal(h*O,c,l):this._zoomInternal(h*O,c,l),this._state===i.TOUCH_DOLLY_TRUCK||this._state===i.TOUCH_ZOOM_TRUCK?this._truckInternal(o,r,!1):this._state!==i.TOUCH_DOLLY_OFFSET&&this._state!==i.TOUCH_ZOOM_OFFSET||this._truckInternal(o,r,!0);break}case i.TRUCK:case i.TOUCH_TRUCK:this._truckInternal(o,r,!1);break;case i.OFFSET:case i.TOUCH_OFFSET:this._truckInternal(o,r,!0)}this.dispatchEvent({type:"control"})},x=()=>{m(this._activePointers,w),e.copy(w),0===this._activePointers.length&&(this._domElement.ownerDocument.removeEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",l),this._domElement.ownerDocument.removeEventListener("touchmove",c,{passive:!1}),this._domElement.ownerDocument.removeEventListener("touchend",d),this.dispatchEvent({type:"controlend"}))};this._domElement.addEventListener("pointerdown",o),y&&this._domElement.addEventListener("mousedown",r),y&&this._domElement.addEventListener("touchstart",n),this._domElement.addEventListener("pointercancel",l),this._domElement.addEventListener("wheel",u,{passive:!1}),this._domElement.addEventListener("contextmenu",f),this._removeAllEventListeners=()=>{this._domElement.removeEventListener("pointerdown",o),this._domElement.removeEventListener("mousedown",r),this._domElement.removeEventListener("touchstart",n),this._domElement.removeEventListener("pointercancel",l),this._domElement.removeEventListener("wheel",u,{passive:!1}),this._domElement.removeEventListener("contextmenu",f),this._domElement.ownerDocument.removeEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.removeEventListener("mousemove",h),this._domElement.ownerDocument.removeEventListener("touchmove",c,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",l),this._domElement.ownerDocument.removeEventListener("mouseup",_),this._domElement.ownerDocument.removeEventListener("touchend",d)},this.cancel=()=>{this._state!==i.NONE&&(this._state=i.NONE,this._activePointers.length=0,x())}}this.update(0)}static install(t){T=t.THREE,v=Object.freeze(new T.Vector3(0,0,0)),x=Object.freeze(new T.Vector3(0,1,0)),C=Object.freeze(new T.Vector3(0,0,1)),w=new T.Vector2,A=new T.Vector3,U=new T.Vector3,z=new T.Vector3,L=new T.Vector3,S=new T.Vector3,D=new T.Vector3,F=new T.Spherical,b=new T.Spherical,P=new T.Box3,R=new T.Box3,M=new T.Sphere,k=new T.Quaternion,V=new T.Quaternion,B=new T.Matrix4,I=new T.Raycaster}static get ACTION(){return g}get camera(){return this._camera}set camera(t){this._camera=t,this.updateCameraUp(),this._camera.updateProjectionMatrix(),this._updateNearPlaneCorners(),this._needsUpdate=!0}get enabled(){return this._enabled}set enabled(t){this._enabled=t,t?(this._domElement.style.touchAction="none",this._domElement.style.userSelect="none",this._domElement.style.webkitUserSelect="none"):(this.cancel(),this._domElement.style.touchAction="",this._domElement.style.userSelect="",this._domElement.style.webkitUserSelect="")}get active(){return!this._hasRested}get currentAction(){return this._state}get distance(){return this._spherical.radius}set distance(t){this._spherical.radius===t&&this._sphericalEnd.radius===t||(this._spherical.radius=t,this._sphericalEnd.radius=t,this._needsUpdate=!0)}get azimuthAngle(){return this._spherical.theta}set azimuthAngle(t){this._spherical.theta===t&&this._sphericalEnd.theta===t||(this._spherical.theta=t,this._sphericalEnd.theta=t,this._needsUpdate=!0)}get polarAngle(){return this._spherical.phi}set polarAngle(t){this._spherical.phi===t&&this._sphericalEnd.phi===t||(this._spherical.phi=t,this._sphericalEnd.phi=t,this._needsUpdate=!0)}get boundaryEnclosesCamera(){return this._boundaryEnclosesCamera}set boundaryEnclosesCamera(t){this._boundaryEnclosesCamera=t,this._needsUpdate=!0}addEventListener(t,e){super.addEventListener(t,e)}removeEventListener(t,e){super.removeEventListener(t,e)}rotate(t,e,s=!1){return this.rotateTo(this._sphericalEnd.theta+t,this._sphericalEnd.phi+e,s)}rotateAzimuthTo(t,e=!1){return this.rotateTo(t,this._sphericalEnd.phi,e)}rotatePolarTo(t,e=!1){return this.rotateTo(this._sphericalEnd.theta,t,e)}rotateTo(t,e,s=!1){const i=T.MathUtils.clamp(t,this.minAzimuthAngle,this.maxAzimuthAngle),o=T.MathUtils.clamp(e,this.minPolarAngle,this.maxPolarAngle);this._sphericalEnd.theta=i,this._sphericalEnd.phi=o,this._sphericalEnd.makeSafe(),this._needsUpdate=!0,s||(this._spherical.theta=this._sphericalEnd.theta,this._spherical.phi=this._sphericalEnd.phi);const r=!s||c(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&c(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold);return this._createOnRestPromise(r)}dolly(t,e=!1){return this.dollyTo(this._sphericalEnd.radius-t,e)}dollyTo(t,e=!1){const s=this._sphericalEnd.radius,i=T.MathUtils.clamp(t,this.minDistance,this.maxDistance);if(this.colliderMeshes.length>=1){const t=this._collisionTest(),e=c(t,this._spherical.radius);if(!(s>i)&&e)return Promise.resolve();this._sphericalEnd.radius=Math.min(i,t)}else this._sphericalEnd.radius=i;this._needsUpdate=!0,e||(this._spherical.radius=this._sphericalEnd.radius);const o=!e||c(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(o)}zoom(t,e=!1){return this.zoomTo(this._zoomEnd+t,e)}zoomTo(t,e=!1){this._zoomEnd=T.MathUtils.clamp(t,this.minZoom,this.maxZoom),this._needsUpdate=!0,e||(this._zoom=this._zoomEnd);const s=!e||c(this._zoom,this._zoomEnd,this.restThreshold);return this._createOnRestPromise(s)}pan(t,e,s=!1){return console.warn("`pan` has been renamed to `truck`"),this.truck(t,e,s)}truck(t,e,s=!1){this._camera.updateMatrix(),L.setFromMatrixColumn(this._camera.matrix,0),S.setFromMatrixColumn(this._camera.matrix,1),L.multiplyScalar(t),S.multiplyScalar(-e);const i=A.copy(L).add(S),o=U.copy(this._targetEnd).add(i);return this.moveTo(o.x,o.y,o.z,s)}forward(t,e=!1){A.setFromMatrixColumn(this._camera.matrix,0),A.crossVectors(this._camera.up,A),A.multiplyScalar(t);const s=U.copy(this._targetEnd).add(A);return this.moveTo(s.x,s.y,s.z,e)}moveTo(t,e,s,i=!1){const o=A.set(t,e,s).sub(this._targetEnd);this._encloseToBoundary(this._targetEnd,o,this.boundaryFriction),this._needsUpdate=!0,i||this._target.copy(this._targetEnd);const r=!i||c(this._target.x,this._targetEnd.x,this.restThreshold)&&c(this._target.y,this._targetEnd.y,this.restThreshold)&&c(this._target.z,this._targetEnd.z,this.restThreshold);return this._createOnRestPromise(r)}fitToBox(t,e,{paddingLeft:s=0,paddingRight:i=0,paddingBottom:n=0,paddingTop:h=0}={}){const _=[],d=t.isBox3?P.copy(t):P.setFromObject(t);d.isEmpty()&&(console.warn("camera-controls: fitTo() cannot be used with an empty box. Aborting"),Promise.resolve());const m=l(this._sphericalEnd.theta,a),p=l(this._sphericalEnd.phi,a);_.push(this.rotateTo(m,p,e));const u=A.setFromSpherical(this._sphericalEnd).normalize(),f=k.setFromUnitVectors(u,C);c(Math.abs(u.y),1)&&f.multiply(V.setFromAxisAngle(x,m));const E=R.makeEmpty();U.copy(d.min).applyQuaternion(f),E.expandByPoint(U),U.copy(d.min).setX(d.max.x).applyQuaternion(f),E.expandByPoint(U),U.copy(d.min).setY(d.max.y).applyQuaternion(f),E.expandByPoint(U),U.copy(d.max).setZ(d.min.z).applyQuaternion(f),E.expandByPoint(U),U.copy(d.min).setZ(d.max.z).applyQuaternion(f),E.expandByPoint(U),U.copy(d.max).setY(d.min.y).applyQuaternion(f),E.expandByPoint(U),U.copy(d.max).setX(d.min.x).applyQuaternion(f),E.expandByPoint(U),U.copy(d.max).applyQuaternion(f),E.expandByPoint(U),f.setFromUnitVectors(C,u),E.min.x-=s,E.min.y-=n,E.max.x+=i,E.max.y+=h;const y=E.getSize(A),g=E.getCenter(U).applyQuaternion(f);if(o(this._camera)){const t=this.getDistanceToFitBox(y.x,y.y,y.z);_.push(this.moveTo(g.x,g.y,g.z,e)),_.push(this.dollyTo(t,e)),_.push(this.setFocalOffset(0,0,0,e))}else if(r(this._camera)){const t=this._camera,s=t.right-t.left,i=t.top-t.bottom,o=Math.min(s/y.x,i/y.y);_.push(this.moveTo(g.x,g.y,g.z,e)),_.push(this.zoomTo(o,e)),_.push(this.setFocalOffset(0,0,0,e))}return Promise.all(_)}fitTo(t,e,s={}){return console.warn("camera-controls: fitTo() has been renamed to fitToBox()"),this.fitToBox(t,e,s)}fitToSphere(t,e){const s=[],i=t instanceof T.Sphere?M.copy(t):function(t,e){const s=e,i=s.center;t.traverse((t=>{t.isMesh&&P.expandByObject(t)})),P.getCenter(i);let o=0;return t.traverse((t=>{if(!t.isMesh)return;const e=t,s=e.geometry.clone();if(s.applyMatrix4(e.matrixWorld),s.isBufferGeometry){const t=s.attributes.position;for(let e=0,s=t.count;e<s;e++)A.fromBufferAttribute(t,e),o=Math.max(o,i.distanceToSquared(A))}else{const t=s.attributes.position,e=new T.Vector3;for(let s=0,r=t.count;s<r;s++)e.fromBufferAttribute(t,s),o=Math.max(o,i.distanceToSquared(e))}})),s.radius=Math.sqrt(o),s}(t,M);if(s.push(this.moveTo(i.center.x,i.center.y,i.center.z,e)),o(this._camera)){const t=this.getDistanceToFitSphere(i.radius);s.push(this.dollyTo(t,e))}else if(r(this._camera)){const t=this._camera.right-this._camera.left,o=this._camera.top-this._camera.bottom,r=2*i.radius,n=Math.min(t/r,o/r);s.push(this.zoomTo(n,e))}return s.push(this.setFocalOffset(0,0,0,e)),Promise.all(s)}setLookAt(t,e,s,i,o,r,n=!1){const a=U.set(i,o,r),h=A.set(t,e,s);this._targetEnd.copy(a),this._sphericalEnd.setFromVector3(h.sub(a).applyQuaternion(this._yAxisUpSpace)),this.normalizeRotations(),this._needsUpdate=!0,n||(this._target.copy(this._targetEnd),this._spherical.copy(this._sphericalEnd));const l=!n||c(this._target.x,this._targetEnd.x,this.restThreshold)&&c(this._target.y,this._targetEnd.y,this.restThreshold)&&c(this._target.z,this._targetEnd.z,this.restThreshold)&&c(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&c(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold)&&c(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(l)}lerpLookAt(t,e,s,i,o,r,n,a,h,l,_,d,m,p=!1){const u=A.set(i,o,r),f=U.set(t,e,s);F.setFromVector3(f.sub(u).applyQuaternion(this._yAxisUpSpace));const E=z.set(l,_,d),y=U.set(n,a,h);b.setFromVector3(y.sub(E).applyQuaternion(this._yAxisUpSpace)),this._targetEnd.copy(u.lerp(E,m));const g=b.theta-F.theta,O=b.phi-F.phi,T=b.radius-F.radius;this._sphericalEnd.set(F.radius+T*m,F.phi+O*m,F.theta+g*m),this.normalizeRotations(),this._needsUpdate=!0,p||(this._target.copy(this._targetEnd),this._spherical.copy(this._sphericalEnd));const v=!p||c(this._target.x,this._targetEnd.x,this.restThreshold)&&c(this._target.y,this._targetEnd.y,this.restThreshold)&&c(this._target.z,this._targetEnd.z,this.restThreshold)&&c(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&c(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold)&&c(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(v)}setPosition(t,e,s,i=!1){return this.setLookAt(t,e,s,this._targetEnd.x,this._targetEnd.y,this._targetEnd.z,i)}setTarget(t,e,s,i=!1){const o=this.getPosition(A);return this.setLookAt(o.x,o.y,o.z,t,e,s,i)}setFocalOffset(t,e,s,i=!1){this._focalOffsetEnd.set(t,e,s),this._needsUpdate=!0,i||this._focalOffset.copy(this._focalOffsetEnd);const o=!i||c(this._focalOffset.x,this._focalOffsetEnd.x,this.restThreshold)&&c(this._focalOffset.y,this._focalOffsetEnd.y,this.restThreshold)&&c(this._focalOffset.z,this._focalOffsetEnd.z,this.restThreshold);return this._createOnRestPromise(o)}setOrbitPoint(t,e,s){L.setFromMatrixColumn(this._camera.matrixWorldInverse,0),S.setFromMatrixColumn(this._camera.matrixWorldInverse,1),D.setFromMatrixColumn(this._camera.matrixWorldInverse,2);const i=A.set(t,e,s),o=i.distanceTo(this._camera.position),r=i.sub(this._camera.position);L.multiplyScalar(r.x),S.multiplyScalar(r.y),D.multiplyScalar(r.z),A.copy(L).add(S).add(D),A.z=A.z+o,this.dollyTo(o,!1),this.setFocalOffset(-A.x,A.y,-A.z,!1),this.moveTo(t,e,s,!1)}setBoundary(t){if(!t)return this._boundary.min.set(-1/0,-1/0,-1/0),this._boundary.max.set(1/0,1/0,1/0),void(this._needsUpdate=!0);this._boundary.copy(t),this._boundary.clampPoint(this._targetEnd,this._targetEnd),this._needsUpdate=!0}setViewport(t,e,s,i){null!==t?(this._viewport=this._viewport||new T.Vector4,"number"===typeof t?this._viewport.set(t,e,s,i):this._viewport.copy(t)):this._viewport=null}getDistanceToFitBox(t,e,s){if(p(this._camera,"getDistanceToFitBox"))return this._spherical.radius;const i=t/e,o=this._camera.getEffectiveFOV()*T.MathUtils.DEG2RAD,r=this._camera.aspect;return.5*(i<r?e:t/r)/Math.tan(.5*o)+.5*s}getDistanceToFit(t,e,s){return console.warn("camera-controls: getDistanceToFit() has been renamed to getDistanceToFitBox()"),this.getDistanceToFitBox(t,e,s)}getDistanceToFitSphere(t){if(p(this._camera,"getDistanceToFitSphere"))return this._spherical.radius;const e=this._camera.getEffectiveFOV()*T.MathUtils.DEG2RAD,s=2*Math.atan(Math.tan(.5*e)*this._camera.aspect),i=1<this._camera.aspect?e:s;return t/Math.sin(.5*i)}getTarget(t){return(t&&t.isVector3?t:new T.Vector3).copy(this._targetEnd)}getPosition(t){return(t&&t.isVector3?t:new T.Vector3).setFromSpherical(this._sphericalEnd).applyQuaternion(this._yAxisUpSpaceInverse).add(this._targetEnd)}getFocalOffset(t){return(t&&t.isVector3?t:new T.Vector3).copy(this._focalOffsetEnd)}normalizeRotations(){this._sphericalEnd.theta=this._sphericalEnd.theta%n,this._sphericalEnd.theta<0&&(this._sphericalEnd.theta+=n),this._spherical.theta+=n*Math.round((this._sphericalEnd.theta-this._spherical.theta)/n)}reset(t=!1){const e=[this.setLookAt(this._position0.x,this._position0.y,this._position0.z,this._target0.x,this._target0.y,this._target0.z,t),this.setFocalOffset(this._focalOffset0.x,this._focalOffset0.y,this._focalOffset0.z,t),this.zoomTo(this._zoom0,t)];return Promise.all(e)}saveState(){this._target0.copy(this._target),this._position0.copy(this._camera.position),this._zoom0=this._zoom}updateCameraUp(){this._yAxisUpSpace.setFromUnitVectors(this._camera.up,x),u(this._yAxisUpSpaceInverse.copy(this._yAxisUpSpace))}update(t){const e=this._state===i.NONE?this.dampingFactor:this.draggingDampingFactor,s=Math.min(e*t*60,1),n=this._sphericalEnd.theta-this._spherical.theta,a=this._sphericalEnd.phi-this._spherical.phi,c=this._sphericalEnd.radius-this._spherical.radius,l=A.subVectors(this._targetEnd,this._target),_=U.subVectors(this._focalOffsetEnd,this._focalOffset);if(h(n)&&h(a)&&h(c)&&h(l.x)&&h(l.y)&&h(l.z)&&h(_.x)&&h(_.y)&&h(_.z)?(this._spherical.copy(this._sphericalEnd),this._target.copy(this._targetEnd),this._focalOffset.copy(this._focalOffsetEnd)):(this._spherical.set(this._spherical.radius+c*s,this._spherical.phi+a*s,this._spherical.theta+n*s),this._target.add(l.multiplyScalar(s)),this._focalOffset.add(_.multiplyScalar(s)),this._needsUpdate=!0),0!==this._dollyControlAmount){if(o(this._camera)){const t=this._camera,e=A.setFromSpherical(this._sphericalEnd).applyQuaternion(this._yAxisUpSpaceInverse).normalize().negate(),s=U.copy(e).cross(t.up).normalize();0===s.lengthSq()&&(s.x=1);const i=z.crossVectors(s,e),o=this._sphericalEnd.radius*Math.tan(t.getEffectiveFOV()*T.MathUtils.DEG2RAD*.5),r=(this._sphericalEnd.radius-this._dollyControlAmount-this._sphericalEnd.radius)/this._sphericalEnd.radius,n=A.copy(this._targetEnd).add(s.multiplyScalar(this._dollyControlCoord.x*o*t.aspect)).add(i.multiplyScalar(this._dollyControlCoord.y*o));this._targetEnd.lerp(n,r),this._target.copy(this._targetEnd)}else if(r(this._camera)){const t=this._camera,e=A.set(this._dollyControlCoord.x,this._dollyControlCoord.y,(t.near+t.far)/(t.near-t.far)).unproject(t),s=U.set(0,0,-1).applyQuaternion(t.quaternion),i=s.dot(t.up),o=h(i)?-e.dot(t.up):-e.dot(t.up)/i,r=z.copy(e).add(s.multiplyScalar(o));this._targetEnd.lerp(r,1-t.zoom/this._dollyControlAmount),this._target.copy(this._targetEnd)}this._dollyControlAmount=0}const d=this._collisionTest();this._spherical.radius=Math.min(this._spherical.radius,d),this._spherical.makeSafe(),this._camera.position.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(this._target),this._camera.lookAt(this._target);(!h(this._focalOffset.x)||!h(this._focalOffset.y)||!h(this._focalOffset.z))&&(this._camera.updateMatrix(),L.setFromMatrixColumn(this._camera.matrix,0),S.setFromMatrixColumn(this._camera.matrix,1),D.setFromMatrixColumn(this._camera.matrix,2),L.multiplyScalar(this._focalOffset.x),S.multiplyScalar(-this._focalOffset.y),D.multiplyScalar(this._focalOffset.z),A.copy(L).add(S).add(D),this._camera.position.add(A)),this._boundaryEnclosesCamera&&this._encloseToBoundary(this._camera.position.copy(this._target),A.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse),1);const m=this._zoomEnd-this._zoom;this._zoom+=m*s,this._camera.zoom!==this._zoom&&(h(m)&&(this._zoom=this._zoomEnd),this._camera.zoom=this._zoom,this._camera.updateProjectionMatrix(),this._updateNearPlaneCorners(),this._needsUpdate=!0);const p=this._needsUpdate;return p&&!this._updatedLastTime?(this._hasRested=!1,this.dispatchEvent({type:"wake"}),this.dispatchEvent({type:"update"})):p?(this.dispatchEvent({type:"update"}),h(n,this.restThreshold)&&h(a,this.restThreshold)&&h(c,this.restThreshold)&&h(l.x,this.restThreshold)&&h(l.y,this.restThreshold)&&h(l.z,this.restThreshold)&&h(_.x,this.restThreshold)&&h(_.y,this.restThreshold)&&h(_.z,this.restThreshold)&&!this._hasRested&&(this._hasRested=!0,this.dispatchEvent({type:"rest"}))):!p&&this._updatedLastTime&&this.dispatchEvent({type:"sleep"}),this._updatedLastTime=p,this._needsUpdate=!1,p}toJSON(){return JSON.stringify({enabled:this._enabled,minDistance:this.minDistance,maxDistance:_(this.maxDistance),minZoom:this.minZoom,maxZoom:_(this.maxZoom),minPolarAngle:this.minPolarAngle,maxPolarAngle:_(this.maxPolarAngle),minAzimuthAngle:_(this.minAzimuthAngle),maxAzimuthAngle:_(this.maxAzimuthAngle),dampingFactor:this.dampingFactor,draggingDampingFactor:this.draggingDampingFactor,dollySpeed:this.dollySpeed,truckSpeed:this.truckSpeed,dollyToCursor:this.dollyToCursor,verticalDragToForward:this.verticalDragToForward,target:this._targetEnd.toArray(),position:A.setFromSpherical(this._sphericalEnd).add(this._targetEnd).toArray(),zoom:this._zoomEnd,focalOffset:this._focalOffsetEnd.toArray(),target0:this._target0.toArray(),position0:this._position0.toArray(),zoom0:this._zoom0,focalOffset0:this._focalOffset0.toArray()})}fromJSON(t,e=!1){const s=JSON.parse(t),i=A.fromArray(s.position);this.enabled=s.enabled,this.minDistance=s.minDistance,this.maxDistance=d(s.maxDistance),this.minZoom=s.minZoom,this.maxZoom=d(s.maxZoom),this.minPolarAngle=s.minPolarAngle,this.maxPolarAngle=d(s.maxPolarAngle),this.minAzimuthAngle=d(s.minAzimuthAngle),this.maxAzimuthAngle=d(s.maxAzimuthAngle),this.dampingFactor=s.dampingFactor,this.draggingDampingFactor=s.draggingDampingFactor,this.dollySpeed=s.dollySpeed,this.truckSpeed=s.truckSpeed,this.dollyToCursor=s.dollyToCursor,this.verticalDragToForward=s.verticalDragToForward,this._target0.fromArray(s.target0),this._position0.fromArray(s.position0),this._zoom0=s.zoom0,this._focalOffset0.fromArray(s.focalOffset0),this.moveTo(s.target[0],s.target[1],s.target[2],e),F.setFromVector3(i.sub(this._targetEnd).applyQuaternion(this._yAxisUpSpace)),this.rotateTo(F.theta,F.phi,e),this.zoomTo(s.zoom,e),this.setFocalOffset(s.focalOffset[0],s.focalOffset[1],s.focalOffset[2],e),this._needsUpdate=!0}dispose(){this._removeAllEventListeners()}_findPointerById(t){let e=null;return this._activePointers.some((s=>s.pointerId===t&&(e=s,!0))),e}_encloseToBoundary(t,e,s){const i=e.lengthSq();if(0===i)return t;const o=U.copy(e).add(t),r=this._boundary.clampPoint(o,z).sub(o),n=r.lengthSq();if(0===n)return t.add(e);if(n===i)return t;if(0===s)return t.add(e).add(r);{const i=1+s*n/e.dot(r);return t.add(U.copy(e).multiplyScalar(i)).add(r.multiplyScalar(1-s))}}_updateNearPlaneCorners(){if(o(this._camera)){const t=this._camera,e=t.near,s=t.getEffectiveFOV()*T.MathUtils.DEG2RAD,i=Math.tan(.5*s)*e,o=i*t.aspect;this._nearPlaneCorners[0].set(-o,-i,0),this._nearPlaneCorners[1].set(o,-i,0),this._nearPlaneCorners[2].set(o,i,0),this._nearPlaneCorners[3].set(-o,i,0)}else if(r(this._camera)){const t=this._camera,e=1/t.zoom,s=t.left*e,i=t.right*e,o=t.top*e,r=t.bottom*e;this._nearPlaneCorners[0].set(s,o,0),this._nearPlaneCorners[1].set(i,o,0),this._nearPlaneCorners[2].set(i,r,0),this._nearPlaneCorners[3].set(s,r,0)}}_collisionTest(){let t=1/0;if(!(this.colliderMeshes.length>=1))return t;if(p(this._camera,"_collisionTest"))return t;const e=A.setFromSpherical(this._spherical).divideScalar(this._spherical.radius);B.lookAt(v,e,this._camera.up);for(let s=0;s<4;s++){const i=U.copy(this._nearPlaneCorners[s]);i.applyMatrix4(B);const o=z.addVectors(this._target,i);I.set(o,e),I.far=this._spherical.radius+1;const r=I.intersectObjects(this.colliderMeshes);0!==r.length&&r[0].distance<t&&(t=r[0].distance)}return t}_getClientRect(t){const e=this._domElement.getBoundingClientRect();return t.x=e.left,t.y=e.top,this._viewport?(t.x+=this._viewport.x,t.y+=e.height-this._viewport.w-this._viewport.y,t.width=this._viewport.z,t.height=this._viewport.w):(t.width=e.width,t.height=e.height),t}_createOnRestPromise(t){return t?Promise.resolve():(this._hasRested=!1,this.dispatchEvent({type:"transitionstart"}),new Promise((t=>{const e=()=>{this.removeEventListener("rest",e),t()};this.addEventListener("rest",e)})))}_removeAllEventListeners(){}}}}]);